/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation.Product;

import Helper.UIHelper;
import Presentation.Common.TabNavigationPanel;
import com.ims.dataAccess.tables.pojos.Productcategory;



import customcontrols.Button;

import customcontrols.LabelCombobox;
import customcontrols.LabelTextFieldInline;
import customcontrols.Panel;
import domainModels.ProductCategoryModel;
import domainModels.ProductModel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;



import net.miginfocom.swing.MigLayout;
import repository.BrandRepository;
import repository.ProductCategoryRepository;
import repository.ProductRepository;

public class ProductFilterPanel extends TabNavigationPanel {

private Panel filterBox;
private Panel gridBox;

private LabelTextFieldInline nameTextField;
private LabelTextFieldInline productIdField;
private LabelCombobox cmb;
private LabelCombobox cmbProductBrand;
private LabelTextFieldInline availableStockField;

    public ProductFilterPanel() {
        initComponents();
        initializeProductFilterPanel(); 
          
    }
    
    private void initializeProductFilterPanel() {       
        
       
        this.setLayout(new MigLayout());
        this.setTitle("Search Product");
        filterBox = new Panel();         
        filterBox.setLayout(new MigLayout());      
    
        Button btnSearch = new Button("Search");
        nameTextField = new LabelTextFieldInline("Name:", 250, 20);
       
        productIdField = new LabelTextFieldInline("ID:",  190, 20);
       
        ArrayList<String> categoryNames =  new ProductCategoryRepository().getAllCategoryNames();
        ArrayList<String> brandNames = new ArrayList<String>(Arrays.asList(new BrandRepository().getAllBrandNames()));
             
        cmb = new LabelCombobox("Category:", 250, categoryNames);     
        
        cmbProductBrand = new LabelCombobox("Brand:", 250, brandNames);
        
        availableStockField = new LabelTextFieldInline("Available Stock (Less then):", 350, 20);
        
        btnSearch.addActionListener(e -> this.btnSearch_Click());
     
        
        filterBox.add(productIdField, "gapx 20, growx, pushx");
        filterBox.add(nameTextField, "gapx 20, growx, pushx");
        filterBox.add(cmb, "wrap, gapx 20, growx, pushx");
        filterBox.add(cmbProductBrand, "gapx 20, growx, pushx");
        filterBox.add(availableStockField, "gapx 20, growx, pushx");
        filterBox.add(btnSearch, "align leading, gapx 40, gapy 20");       
     

       this.add(filterBox, "span, pushx, grow, gapright 60");     

    }
    
    private void btnSearch_Click() {
        
         int productId = 0;
        if (this.productIdField.getTextVal().matches("\\d+")) {
            productId = Integer.parseInt(this.productIdField.getTextVal());
        }
         
        String productName = this.nameTextField.getTextVal();
        String category = this.cmb.selectedItem().equals("--Select Items--") ? "" : this.cmb.selectedItem();
        String brand = this.cmbProductBrand.selectedItem().equals("--Select Items--") ? "" : this.cmbProductBrand.selectedItem();
        String avail = this.availableStockField.getTextVal();
        
        int availableStock = - 1;
        if (avail.matches("\\d+")) {
             availableStock = Integer.parseInt(avail);
         }
 
        ProductRepository productRepo = new ProductRepository();
        List<ProductModel> productModelList = productRepo.searchEntity(productId, productName, category, brand, availableStock);
        
        this.fireSearchChanged(productModelList);
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 958, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
