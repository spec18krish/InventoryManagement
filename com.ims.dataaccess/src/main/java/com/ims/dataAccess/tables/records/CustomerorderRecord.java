/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.records;


import com.ims.dataAccess.tables.Customerorder;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerorderRecord extends UpdatableRecordImpl<CustomerorderRecord> implements Record4<Integer, Date, String, Integer> {

    private static final long serialVersionUID = -1105856122;

    /**
     * Setter for <code>inventorymanagement.customerorder.customerOrderId</code>.
     */
    public void setCustomerorderid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inventorymanagement.customerorder.customerOrderId</code>.
     */
    public Integer getCustomerorderid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inventorymanagement.customerorder.date</code>.
     */
    public void setDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>inventorymanagement.customerorder.date</code>.
     */
    public Date getDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>inventorymanagement.customerorder.orderDescription</code>.
     */
    public void setOrderdescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>inventorymanagement.customerorder.orderDescription</code>.
     */
    public String getOrderdescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>inventorymanagement.customerorder.customerId</code>.
     */
    public void setCustomerid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>inventorymanagement.customerorder.customerId</code>.
     */
    public Integer getCustomerid() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Date, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Date, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Customerorder.CUSTOMERORDER.CUSTOMERORDERID;
    }

    @Override
    public Field<Date> field2() {
        return Customerorder.CUSTOMERORDER.DATE;
    }

    @Override
    public Field<String> field3() {
        return Customerorder.CUSTOMERORDER.ORDERDESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Customerorder.CUSTOMERORDER.CUSTOMERID;
    }

    @Override
    public Integer component1() {
        return getCustomerorderid();
    }

    @Override
    public Date component2() {
        return getDate();
    }

    @Override
    public String component3() {
        return getOrderdescription();
    }

    @Override
    public Integer component4() {
        return getCustomerid();
    }

    @Override
    public Integer value1() {
        return getCustomerorderid();
    }

    @Override
    public Date value2() {
        return getDate();
    }

    @Override
    public String value3() {
        return getOrderdescription();
    }

    @Override
    public Integer value4() {
        return getCustomerid();
    }

    @Override
    public CustomerorderRecord value1(Integer value) {
        setCustomerorderid(value);
        return this;
    }

    @Override
    public CustomerorderRecord value2(Date value) {
        setDate(value);
        return this;
    }

    @Override
    public CustomerorderRecord value3(String value) {
        setOrderdescription(value);
        return this;
    }

    @Override
    public CustomerorderRecord value4(Integer value) {
        setCustomerid(value);
        return this;
    }

    @Override
    public CustomerorderRecord values(Integer value1, Date value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerorderRecord
     */
    public CustomerorderRecord() {
        super(Customerorder.CUSTOMERORDER);
    }

    /**
     * Create a detached, initialised CustomerorderRecord
     */
    public CustomerorderRecord(Integer customerorderid, Date date, String orderdescription, Integer customerid) {
        super(Customerorder.CUSTOMERORDER);

        set(0, customerorderid);
        set(1, date);
        set(2, orderdescription);
        set(3, customerid);
    }
}
