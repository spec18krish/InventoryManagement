/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.daos;


import com.ims.dataAccess.tables.Customerorderdetail;
import com.ims.dataAccess.tables.records.CustomerorderdetailRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerorderdetailDao extends DAOImpl<CustomerorderdetailRecord, com.ims.dataAccess.tables.pojos.Customerorderdetail, Integer> {

    /**
     * Create a new CustomerorderdetailDao without any configuration
     */
    public CustomerorderdetailDao() {
        super(Customerorderdetail.CUSTOMERORDERDETAIL, com.ims.dataAccess.tables.pojos.Customerorderdetail.class);
    }

    /**
     * Create a new CustomerorderdetailDao with an attached configuration
     */
    public CustomerorderdetailDao(Configuration configuration) {
        super(Customerorderdetail.CUSTOMERORDERDETAIL, com.ims.dataAccess.tables.pojos.Customerorderdetail.class, configuration);
    }

    @Override
    public Integer getId(com.ims.dataAccess.tables.pojos.Customerorderdetail object) {
        return object.getCustomerorderdetailid();
    }

    /**
     * Fetch records that have <code>customerOrderDetailId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchRangeOfCustomerorderdetailid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customerorderdetail.CUSTOMERORDERDETAIL.CUSTOMERORDERDETAILID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customerOrderDetailId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchByCustomerorderdetailid(Integer... values) {
        return fetch(Customerorderdetail.CUSTOMERORDERDETAIL.CUSTOMERORDERDETAILID, values);
    }

    /**
     * Fetch a unique record that has <code>customerOrderDetailId = value</code>
     */
    public com.ims.dataAccess.tables.pojos.Customerorderdetail fetchOneByCustomerorderdetailid(Integer value) {
        return fetchOne(Customerorderdetail.CUSTOMERORDERDETAIL.CUSTOMERORDERDETAILID, value);
    }

    /**
     * Fetch records that have <code>productId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchRangeOfProductid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customerorderdetail.CUSTOMERORDERDETAIL.PRODUCTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>productId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchByProductid(Integer... values) {
        return fetch(Customerorderdetail.CUSTOMERORDERDETAIL.PRODUCTID, values);
    }

    /**
     * Fetch records that have <code>quantity BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchRangeOfQuantity(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customerorderdetail.CUSTOMERORDERDETAIL.QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantity IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchByQuantity(Integer... values) {
        return fetch(Customerorderdetail.CUSTOMERORDERDETAIL.QUANTITY, values);
    }

    /**
     * Fetch records that have <code>customerOrderId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchRangeOfCustomerorderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customerorderdetail.CUSTOMERORDERDETAIL.CUSTOMERORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customerOrderId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchByCustomerorderid(Integer... values) {
        return fetch(Customerorderdetail.CUSTOMERORDERDETAIL.CUSTOMERORDERID, values);
    }

    /**
     * Fetch records that have <code>orderDetailNotes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchRangeOfOrderdetailnotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customerorderdetail.CUSTOMERORDERDETAIL.ORDERDETAILNOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderDetailNotes IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Customerorderdetail> fetchByOrderdetailnotes(String... values) {
        return fetch(Customerorderdetail.CUSTOMERORDERDETAIL.ORDERDETAILNOTES, values);
    }
}
