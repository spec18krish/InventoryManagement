/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.daos;


import com.ims.dataAccess.tables.User;
import com.ims.dataAccess.tables.records.UserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, com.ims.dataAccess.tables.pojos.User, Integer> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.ims.dataAccess.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, com.ims.dataAccess.tables.pojos.User.class, configuration);
    }

    @Override
    public Integer getId(com.ims.dataAccess.tables.pojos.User object) {
        return object.getUserid();
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfUserid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByUserid(Integer... values) {
        return fetch(User.USER.USERID, values);
    }

    /**
     * Fetch a unique record that has <code>userId = value</code>
     */
    public com.ims.dataAccess.tables.pojos.User fetchOneByUserid(Integer value) {
        return fetchOne(User.USER.USERID, value);
    }

    /**
     * Fetch records that have <code>userTypeId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfUsertypeid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.USERTYPEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userTypeId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByUsertypeid(Integer... values) {
        return fetch(User.USER.USERTYPEID, values);
    }

    /**
     * Fetch records that have <code>firstName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfFirstname(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.FIRSTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstName IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByFirstname(String... values) {
        return fetch(User.USER.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfLastname(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.LASTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastName IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByLastname(String... values) {
        return fetch(User.USER.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>age BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfAge(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByAge(Integer... values) {
        return fetch(User.USER.AGE, values);
    }

    /**
     * Fetch records that have <code>gender BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfGender(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.GENDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByGender(String... values) {
        return fetch(User.USER.GENDER, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>mobileNumber BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfMobilenumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.MOBILENUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobileNumber IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByMobilenumber(String... values) {
        return fetch(User.USER.MOBILENUMBER, values);
    }

    /**
     * Fetch records that have <code>userName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userName IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByUsername(String... values) {
        return fetch(User.USER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>houseNo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfHouseno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.HOUSENO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>houseNo IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByHouseno(Integer... values) {
        return fetch(User.USER.HOUSENO, values);
    }

    /**
     * Fetch records that have <code>streetName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfStreetname(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.STREETNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>streetName IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByStreetname(String... values) {
        return fetch(User.USER.STREETNAME, values);
    }

    /**
     * Fetch records that have <code>suburb BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfSuburb(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.SUBURB, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>suburb IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchBySuburb(String... values) {
        return fetch(User.USER.SUBURB, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.User> fetchByCity(String... values) {
        return fetch(User.USER.CITY, values);
    }
}
