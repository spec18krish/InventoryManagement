/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.daos;


import com.ims.dataAccess.tables.Productcategory;
import com.ims.dataAccess.tables.records.ProductcategoryRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductcategoryDao extends DAOImpl<ProductcategoryRecord, com.ims.dataAccess.tables.pojos.Productcategory, Integer> {

    /**
     * Create a new ProductcategoryDao without any configuration
     */
    public ProductcategoryDao() {
        super(Productcategory.PRODUCTCATEGORY, com.ims.dataAccess.tables.pojos.Productcategory.class);
    }

    /**
     * Create a new ProductcategoryDao with an attached configuration
     */
    public ProductcategoryDao(Configuration configuration) {
        super(Productcategory.PRODUCTCATEGORY, com.ims.dataAccess.tables.pojos.Productcategory.class, configuration);
    }

    @Override
    public Integer getId(com.ims.dataAccess.tables.pojos.Productcategory object) {
        return object.getCategoryid();
    }

    /**
     * Fetch records that have <code>categoryId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchRangeOfCategoryid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Productcategory.PRODUCTCATEGORY.CATEGORYID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>categoryId IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchByCategoryid(Integer... values) {
        return fetch(Productcategory.PRODUCTCATEGORY.CATEGORYID, values);
    }

    /**
     * Fetch a unique record that has <code>categoryId = value</code>
     */
    public com.ims.dataAccess.tables.pojos.Productcategory fetchOneByCategoryid(Integer value) {
        return fetchOne(Productcategory.PRODUCTCATEGORY.CATEGORYID, value);
    }

    /**
     * Fetch records that have <code>categoryName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchRangeOfCategoryname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Productcategory.PRODUCTCATEGORY.CATEGORYNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>categoryName IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchByCategoryname(String... values) {
        return fetch(Productcategory.PRODUCTCATEGORY.CATEGORYNAME, values);
    }

    /**
     * Fetch a unique record that has <code>categoryName = value</code>
     */
    public com.ims.dataAccess.tables.pojos.Productcategory fetchOneByCategoryname(String value) {
        return fetchOne(Productcategory.PRODUCTCATEGORY.CATEGORYNAME, value);
    }

    /**
     * Fetch records that have <code>categoryDescription BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchRangeOfCategorydescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Productcategory.PRODUCTCATEGORY.CATEGORYDESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>categoryDescription IN (values)</code>
     */
    public List<com.ims.dataAccess.tables.pojos.Productcategory> fetchByCategorydescription(String... values) {
        return fetch(Productcategory.PRODUCTCATEGORY.CATEGORYDESCRIPTION, values);
    }
}
