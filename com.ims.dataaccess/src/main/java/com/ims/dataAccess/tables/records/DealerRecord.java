/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.records;


import com.ims.dataAccess.tables.Dealer;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DealerRecord extends UpdatableRecordImpl<DealerRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 507870478;

    /**
     * Setter for <code>inventorymanagement.dealer.dealerId</code>.
     */
    public void setDealerid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inventorymanagement.dealer.dealerId</code>.
     */
    public Integer getDealerid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inventorymanagement.dealer.userId</code>.
     */
    public void setUserid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>inventorymanagement.dealer.userId</code>.
     */
    public Integer getUserid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>inventorymanagement.dealer.companyName</code>.
     */
    public void setCompanyname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>inventorymanagement.dealer.companyName</code>.
     */
    public String getCompanyname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>inventorymanagement.dealer.dealerDescription</code>.
     */
    public void setDealerdescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>inventorymanagement.dealer.dealerDescription</code>.
     */
    public String getDealerdescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Dealer.DEALER.DEALERID;
    }

    @Override
    public Field<Integer> field2() {
        return Dealer.DEALER.USERID;
    }

    @Override
    public Field<String> field3() {
        return Dealer.DEALER.COMPANYNAME;
    }

    @Override
    public Field<String> field4() {
        return Dealer.DEALER.DEALERDESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getDealerid();
    }

    @Override
    public Integer component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getCompanyname();
    }

    @Override
    public String component4() {
        return getDealerdescription();
    }

    @Override
    public Integer value1() {
        return getDealerid();
    }

    @Override
    public Integer value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getCompanyname();
    }

    @Override
    public String value4() {
        return getDealerdescription();
    }

    @Override
    public DealerRecord value1(Integer value) {
        setDealerid(value);
        return this;
    }

    @Override
    public DealerRecord value2(Integer value) {
        setUserid(value);
        return this;
    }

    @Override
    public DealerRecord value3(String value) {
        setCompanyname(value);
        return this;
    }

    @Override
    public DealerRecord value4(String value) {
        setDealerdescription(value);
        return this;
    }

    @Override
    public DealerRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DealerRecord
     */
    public DealerRecord() {
        super(Dealer.DEALER);
    }

    /**
     * Create a detached, initialised DealerRecord
     */
    public DealerRecord(Integer dealerid, Integer userid, String companyname, String dealerdescription) {
        super(Dealer.DEALER);

        set(0, dealerid);
        set(1, userid);
        set(2, companyname);
        set(3, dealerdescription);
    }
}
