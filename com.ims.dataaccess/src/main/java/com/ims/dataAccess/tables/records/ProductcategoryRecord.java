/*
 * This file is generated by jOOQ.
 */
package com.ims.dataAccess.tables.records;


import com.ims.dataAccess.tables.Productcategory;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductcategoryRecord extends UpdatableRecordImpl<ProductcategoryRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 691729670;

    /**
     * Setter for <code>inventorymanagement.productcategory.categoryId</code>.
     */
    public void setCategoryid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inventorymanagement.productcategory.categoryId</code>.
     */
    public Integer getCategoryid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inventorymanagement.productcategory.categoryName</code>.
     */
    public void setCategoryname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>inventorymanagement.productcategory.categoryName</code>.
     */
    public String getCategoryname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>inventorymanagement.productcategory.categoryDescription</code>.
     */
    public void setCategorydescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>inventorymanagement.productcategory.categoryDescription</code>.
     */
    public String getCategorydescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Productcategory.PRODUCTCATEGORY.CATEGORYID;
    }

    @Override
    public Field<String> field2() {
        return Productcategory.PRODUCTCATEGORY.CATEGORYNAME;
    }

    @Override
    public Field<String> field3() {
        return Productcategory.PRODUCTCATEGORY.CATEGORYDESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getCategoryid();
    }

    @Override
    public String component2() {
        return getCategoryname();
    }

    @Override
    public String component3() {
        return getCategorydescription();
    }

    @Override
    public Integer value1() {
        return getCategoryid();
    }

    @Override
    public String value2() {
        return getCategoryname();
    }

    @Override
    public String value3() {
        return getCategorydescription();
    }

    @Override
    public ProductcategoryRecord value1(Integer value) {
        setCategoryid(value);
        return this;
    }

    @Override
    public ProductcategoryRecord value2(String value) {
        setCategoryname(value);
        return this;
    }

    @Override
    public ProductcategoryRecord value3(String value) {
        setCategorydescription(value);
        return this;
    }

    @Override
    public ProductcategoryRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductcategoryRecord
     */
    public ProductcategoryRecord() {
        super(Productcategory.PRODUCTCATEGORY);
    }

    /**
     * Create a detached, initialised ProductcategoryRecord
     */
    public ProductcategoryRecord(Integer categoryid, String categoryname, String categorydescription) {
        super(Productcategory.PRODUCTCATEGORY);

        set(0, categoryid);
        set(1, categoryname);
        set(2, categorydescription);
    }
}
